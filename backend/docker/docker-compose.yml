version: '3.8'

services:
  db:
    image: postgres:15
    container_name: music-db-1
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - music_network

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: music-web-1
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../.env
    environment:
      - POSTGRES_SERVER=db
    ports:
      - "8000:8000"
    volumes:
      - ../app:/app/app
      - ../alembic:/app/alembic
      - ./start.sh:/app/start.sh
    command: ["bash", "/app/start.sh"]
    networks:
      - music_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  music_network:
    driver: bridge 
