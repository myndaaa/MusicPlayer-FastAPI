"""Updated Schema

Revision ID: e18b0c60c1c6
Revises: 
Create Date: 2025-07-23 16:28:40.730597

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e18b0c60c1c6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bands',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.Column('social_link', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_band_name')
    )
    op.create_index('idx_band_name', 'bands', ['name'], unique=False)
    op.create_table('genres',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_genre_name')
    )
    op.create_index('idx_genre_name', 'genres', ['name'], unique=False)
    op.create_index(op.f('ix_genres_name'), 'genres', ['name'], unique=True)
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('offer_created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_subscription_plans_duration', 'subscription_plans', ['duration_days'], unique=False)
    op.create_index('idx_subscription_plans_is_active', 'subscription_plans', ['is_active'], unique=False)
    op.create_index('idx_subscription_plans_name', 'subscription_plans', ['name'], unique=False)
    op.create_index('idx_subscription_plans_price', 'subscription_plans', ['price'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('username', name='uq_user_username')
    )
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('artists',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artist_stage_name', sa.String(length=50), nullable=False),
    sa.Column('artist_bio', sa.Text(), nullable=True),
    sa.Column('artist_profile_image', sa.String(length=255), nullable=True),
    sa.Column('artist_social_link', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('linked_user_account', sa.Integer(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['linked_user_account'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('linked_user_account'),
    sa.UniqueConstraint('linked_user_account', name='uq_artist_user_account')
    )
    op.create_index('idx_artist_stage_name', 'artists', ['artist_stage_name'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('target_table', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('action_details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_audit_log_user__users'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_log_action_type', 'audit_logs', ['action_type'], unique=False)
    op.create_index('idx_audit_log_target_table', 'audit_logs', ['target_table'], unique=False)
    op.create_table('localizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('translation_key', sa.String(length=100), nullable=False),
    sa.Column('language_code', sa.String(length=10), nullable=False),
    sa.Column('translation_value', sa.Text(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], name='fk_localization_updated_by_user__user'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_localization_translation_key', 'localizations', ['translation_key'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=False),
    sa.Column('method', sa.String(length=100), nullable=False),
    sa.Column('transaction_reference', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_reference')
    )
    op.create_index('idx_payments_created_at', 'payments', ['created_at'], unique=False)
    op.create_index('idx_payments_method', 'payments', ['method'], unique=False)
    op.create_index('idx_payments_status', 'payments', ['status'], unique=False)
    op.create_index('idx_payments_user_id', 'payments', ['user_id'], unique=False)
    op.create_table('playlists',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='fk_playlist_owner_id_users'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'name', name='uq_playlist_owner_name')
    )
    op.create_index('idx_playlist_owner_id', 'playlists', ['owner_id'], unique=False)
    op.create_table('system_configs',
    sa.Column('config_key', sa.String(length=100), nullable=False),
    sa.Column('config_value', sa.String(length=100), nullable=False),
    sa.Column('config_description', sa.Text(), nullable=True),
    sa.Column('config_updated_at', sa.DateTime(), nullable=False),
    sa.Column('config_updated_by_admin_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_updated_by_admin_id'], ['users.id'], name='fk_system_config_updated_by_admin__user'),
    sa.PrimaryKeyConstraint('config_key')
    )
    op.create_index('idx_system_config_config_key', 'system_configs', ['config_key'], unique=False)
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('is_auto_renew', sa.Boolean(), nullable=False),
    sa.Column('is_cancelled', sa.Boolean(), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_subscriptions_auto_renew', 'user_subscriptions', ['is_auto_renew'], unique=False)
    op.create_index('idx_user_subscriptions_end_date', 'user_subscriptions', ['end_date'], unique=False)
    op.create_index('idx_user_subscriptions_is_cancelled', 'user_subscriptions', ['is_cancelled'], unique=False)
    op.create_index('idx_user_subscriptions_plan_id', 'user_subscriptions', ['plan_id'], unique=False)
    op.create_index('idx_user_subscriptions_user_id', 'user_subscriptions', ['user_id'], unique=False)
    op.create_table('albums',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cover_image', sa.String(length=255), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('album_artist_id', sa.Integer(), nullable=True),
    sa.Column('album_band_id', sa.Integer(), nullable=True),
    sa.Column('artist_name', sa.String(length=100), nullable=True),
    sa.Column('band_name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['album_artist_id'], ['artists.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['album_band_id'], ['bands.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_album_artist_id', 'albums', ['album_artist_id'], unique=False)
    op.create_index('idx_album_band_id', 'albums', ['album_band_id'], unique=False)
    op.create_index('idx_album_title', 'albums', ['title'], unique=False)
    op.create_table('artist_band_members',
    sa.Column('band_member_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('band_id', sa.Integer(), nullable=False),
    sa.Column('joined_on', sa.DateTime(), nullable=False),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('is_current_member', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['band_id'], ['bands.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('band_member_id'),
    sa.UniqueConstraint('artist_id', 'band_id', 'joined_on', name='uq_artist_band_joined')
    )
    op.create_index('idx_artist_band', 'artist_band_members', ['artist_id', 'band_id'], unique=False)
    op.create_table('followings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('band_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['band_id'], ['bands.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'artist_id', name='uq_user_artist_follow'),
    sa.UniqueConstraint('user_id', 'band_id', name='uq_user_band_follow')
    )
    op.create_index('idx_followings_artist_id', 'followings', ['artist_id'], unique=False)
    op.create_index('idx_followings_band_id', 'followings', ['band_id'], unique=False)
    op.create_index('idx_followings_user_id', 'followings', ['user_id'], unique=False)
    op.create_table('playlist_collaborators',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('collaborator_id', sa.Integer(), nullable=False),
    sa.Column('can_edit', sa.Boolean(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('added_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['added_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['collaborator_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('playlist_id', 'collaborator_id', name='uq_playlist_collaborator')
    )
    op.create_index('idx_playlist_collaborator', 'playlist_collaborators', ['playlist_id', 'collaborator_id'], unique=False)
    op.create_table('songs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.Column('band_id', sa.Integer(), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=False),
    sa.Column('song_duration', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('cover_image', sa.String(length=255), nullable=True),
    sa.Column('artist_name', sa.String(length=100), nullable=True),
    sa.Column('band_name', sa.String(length=100), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['band_id'], ['bands.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_song_artist_id', 'songs', ['artist_id'], unique=False)
    op.create_index('idx_song_band_id', 'songs', ['band_id'], unique=False)
    op.create_index('idx_song_genre_id', 'songs', ['genre_id'], unique=False)
    op.create_index('idx_song_title', 'songs', ['title'], unique=False)
    op.create_table('album_songs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('track_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('album_id', 'track_number', name='uq_album_track')
    )
    op.create_index('idx_album_song_album_id', 'album_songs', ['album_id'], unique=False)
    op.create_table('histories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('played_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_history_user_song', 'histories', ['user_id', 'song_id'], unique=False)
    op.create_table('likes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('liked_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'song_id', name='uq_user_song_like')
    )
    op.create_index('idx_likes_user_song', 'likes', ['user_id', 'song_id'], unique=False)
    op.create_table('playlist_songs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('song_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_playlist_song', 'playlist_songs', ['playlist_id', 'song_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_playlist_song', table_name='playlist_songs')
    op.drop_table('playlist_songs')
    op.drop_index('idx_likes_user_song', table_name='likes')
    op.drop_table('likes')
    op.drop_index('idx_history_user_song', table_name='histories')
    op.drop_table('histories')
    op.drop_index('idx_album_song_album_id', table_name='album_songs')
    op.drop_table('album_songs')
    op.drop_index('idx_song_title', table_name='songs')
    op.drop_index('idx_song_genre_id', table_name='songs')
    op.drop_index('idx_song_band_id', table_name='songs')
    op.drop_index('idx_song_artist_id', table_name='songs')
    op.drop_table('songs')
    op.drop_index('idx_playlist_collaborator', table_name='playlist_collaborators')
    op.drop_table('playlist_collaborators')
    op.drop_index('idx_followings_user_id', table_name='followings')
    op.drop_index('idx_followings_band_id', table_name='followings')
    op.drop_index('idx_followings_artist_id', table_name='followings')
    op.drop_table('followings')
    op.drop_index('idx_artist_band', table_name='artist_band_members')
    op.drop_table('artist_band_members')
    op.drop_index('idx_album_title', table_name='albums')
    op.drop_index('idx_album_band_id', table_name='albums')
    op.drop_index('idx_album_artist_id', table_name='albums')
    op.drop_table('albums')
    op.drop_index('idx_user_subscriptions_user_id', table_name='user_subscriptions')
    op.drop_index('idx_user_subscriptions_plan_id', table_name='user_subscriptions')
    op.drop_index('idx_user_subscriptions_is_cancelled', table_name='user_subscriptions')
    op.drop_index('idx_user_subscriptions_end_date', table_name='user_subscriptions')
    op.drop_index('idx_user_subscriptions_auto_renew', table_name='user_subscriptions')
    op.drop_table('user_subscriptions')
    op.drop_index('idx_system_config_config_key', table_name='system_configs')
    op.drop_table('system_configs')
    op.drop_index('idx_playlist_owner_id', table_name='playlists')
    op.drop_table('playlists')
    op.drop_index('idx_payments_user_id', table_name='payments')
    op.drop_index('idx_payments_status', table_name='payments')
    op.drop_index('idx_payments_method', table_name='payments')
    op.drop_index('idx_payments_created_at', table_name='payments')
    op.drop_table('payments')
    op.drop_index('idx_localization_translation_key', table_name='localizations')
    op.drop_table('localizations')
    op.drop_index('idx_audit_log_target_table', table_name='audit_logs')
    op.drop_index('idx_audit_log_action_type', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('idx_artist_stage_name', table_name='artists')
    op.drop_table('artists')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_subscription_plans_price', table_name='subscription_plans')
    op.drop_index('idx_subscription_plans_name', table_name='subscription_plans')
    op.drop_index('idx_subscription_plans_is_active', table_name='subscription_plans')
    op.drop_index('idx_subscription_plans_duration', table_name='subscription_plans')
    op.drop_table('subscription_plans')
    op.drop_index(op.f('ix_genres_name'), table_name='genres')
    op.drop_index('idx_genre_name', table_name='genres')
    op.drop_table('genres')
    op.drop_index('idx_band_name', table_name='bands')
    op.drop_table('bands')
    # ### end Alembic commands ###
