"""Create all tables

Revision ID: 2bb752090ec0
Revises: 5a5ad4a8417c
Create Date: 2025-07-21 17:06:59.950457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2bb752090ec0'
down_revision: Union[str, Sequence[str], None] = '5a5ad4a8417c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('band',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.Column('social_link', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_band_name')
    )
    op.create_index('ix_band_name', 'band', ['name'], unique=False)
    op.create_table('genre',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_genre_name')
    )
    op.create_index(op.f('ix_genre_name'), 'genre', ['name'], unique=True)
    op.create_table('subscription_plan',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('offer_created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('superadmin', 'singer', 'listener', name='userrole'), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('username', name='uq_user_username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.create_table('artist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artist_stage_name', sa.String(length=50), nullable=False),
    sa.Column('artist_bio', sa.Text(), nullable=True),
    sa.Column('artist_profile_image', sa.String(length=255), nullable=True),
    sa.Column('artist_social_link', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('linked_user_account', sa.Integer(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['linked_user_account'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('linked_user_account'),
    sa.UniqueConstraint('linked_user_account', name='uq_artist_user_account')
    )
    op.create_index('ix_artist_stage_name', 'artist', ['artist_stage_name'], unique=False)
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('target_table', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('action_details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_audit_log_user__user'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_audit_log_action_type', 'audit_log', ['action_type'], unique=False)
    op.create_index('ix_audit_log_target_table', 'audit_log', ['target_table'], unique=False)
    op.create_table('localization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('translation_key', sa.String(length=100), nullable=False),
    sa.Column('language_code', sa.String(length=10), nullable=False),
    sa.Column('translation_value', sa.Text(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['user.id'], name='fk_localization_updated_by_user__user'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_localization_translation_key', 'localization', ['translation_key'], unique=False)
    op.create_table('payment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_status', sa.Enum('pending', 'success', 'failed', 'refunded', name='paymentstatusenum'), nullable=False),
    sa.Column('payment_method', sa.Enum('paypal', 'credit_card', name='paymentmethodenum'), nullable=False),
    sa.Column('transaction_reference', sa.String(length=255), nullable=False),
    sa.Column('payment_created_at', sa.DateTime(), nullable=False),
    sa.Column('payment_completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_reference')
    )
    op.create_table('playlist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='fk_playlist_owner_id_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'name', name='uq_playlist_owner_name')
    )
    op.create_index('ix_playlist_owner_id', 'playlist', ['owner_id'], unique=False)
    op.create_table('system_config',
    sa.Column('config_key', sa.String(length=100), nullable=False),
    sa.Column('config_value', sa.String(length=100), nullable=False),
    sa.Column('config_description', sa.Text(), nullable=True),
    sa.Column('config_updated_at', sa.DateTime(), nullable=False),
    sa.Column('config_updated_by_admin_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_updated_by_admin_id'], ['user.id'], name='fk_system_config_updated_by_admin__user'),
    sa.PrimaryKeyConstraint('config_key')
    )
    op.create_index('ix_system_config_config_key', 'system_config', ['config_key'], unique=False)
    op.create_table('user_subscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('is_auto_renew', sa.Boolean(), nullable=False),
    sa.Column('is_cancelled', sa.Boolean(), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plan.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('album',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cover_image', sa.String(length=255), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('album_artist_id', sa.Integer(), nullable=True),
    sa.Column('album_band_id', sa.Integer(), nullable=True),
    sa.Column('artist_name_text', sa.String(length=100), nullable=True),
    sa.Column('band_name_text', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['album_artist_id'], ['artist.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['album_band_id'], ['band.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artist_band_members',
    sa.Column('band_member_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('band_id', sa.Integer(), nullable=False),
    sa.Column('joined_on', sa.DateTime(), nullable=False),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('is_current_member', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['band_id'], ['band.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('band_member_id'),
    sa.UniqueConstraint('artist_id', 'band_id', 'joined_on', name='uq_artist_band_joined')
    )
    op.create_index('ix_artist_band', 'artist_band_members', ['artist_id', 'band_id'], unique=False)
    op.create_table('following',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('band_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['band_id'], ['band.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playlist_collaborator',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('collaborator_id', sa.Integer(), nullable=False),
    sa.Column('can_edit', sa.Boolean(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('added_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['added_by_user_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['collaborator_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlist.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_playlist_collaborator', 'playlist_collaborator', ['playlist_id', 'collaborator_id'], unique=False)
    op.create_table('song',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.Column('band_id', sa.Integer(), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=False),
    sa.Column('song_duration', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('cover_image', sa.String(length=255), nullable=True),
    sa.Column('artist_name_text', sa.String(length=100), nullable=True),
    sa.Column('band_name_text', sa.String(length=100), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ),
    sa.ForeignKeyConstraint(['band_id'], ['band.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_song_artist_id', 'song', ['artist_id'], unique=False)
    op.create_index('ix_song_band_id', 'song', ['band_id'], unique=False)
    op.create_index('ix_song_genre_id', 'song', ['genre_id'], unique=False)
    op.create_index('ix_song_title', 'song', ['title'], unique=False)
    op.create_table('album_songs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('track_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('album_id', 'track_number', name='uq_album_track')
    )
    op.create_table('history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('played_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_history_user_song', 'history', ['user_id', 'song_id'], unique=False)
    op.create_table('likes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('liked_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'song_id', name='uq_user_song_like')
    )
    op.create_index('ix_likes_user_song', 'likes', ['user_id', 'song_id'], unique=False)
    op.create_table('playlist_songs',
    sa.Column('playlist_song_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('song_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlist.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('playlist_song_id')
    )
    op.create_index('ix_playlist_song', 'playlist_songs', ['playlist_id', 'song_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_playlist_song', table_name='playlist_songs')
    op.drop_table('playlist_songs')
    op.drop_index('ix_likes_user_song', table_name='likes')
    op.drop_table('likes')
    op.drop_index('ix_history_user_song', table_name='history')
    op.drop_table('history')
    op.drop_table('album_songs')
    op.drop_index('ix_song_title', table_name='song')
    op.drop_index('ix_song_genre_id', table_name='song')
    op.drop_index('ix_song_band_id', table_name='song')
    op.drop_index('ix_song_artist_id', table_name='song')
    op.drop_table('song')
    op.drop_index('ix_playlist_collaborator', table_name='playlist_collaborator')
    op.drop_table('playlist_collaborator')
    op.drop_table('following')
    op.drop_index('ix_artist_band', table_name='artist_band_members')
    op.drop_table('artist_band_members')
    op.drop_table('album')
    op.drop_table('user_subscription')
    op.drop_index('ix_system_config_config_key', table_name='system_config')
    op.drop_table('system_config')
    op.drop_index('ix_playlist_owner_id', table_name='playlist')
    op.drop_table('playlist')
    op.drop_table('payment')
    op.drop_index('ix_localization_translation_key', table_name='localization')
    op.drop_table('localization')
    op.drop_index('ix_audit_log_target_table', table_name='audit_log')
    op.drop_index('ix_audit_log_action_type', table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index('ix_artist_stage_name', table_name='artist')
    op.drop_table('artist')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('subscription_plan')
    op.drop_index(op.f('ix_genre_name'), table_name='genre')
    op.drop_table('genre')
    op.drop_index('ix_band_name', table_name='band')
    op.drop_table('band')
    # ### end Alembic commands ###
